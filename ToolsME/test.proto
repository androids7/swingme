enum ObjectType {

    UNKNOWN                            =    0;
    END                                =    1;
    NULL                               =    2;
    
    JAVA_LANG_BOOLEAN                  = 1001;
    JAVA_LANG_BYTE                     = 1002;
    JAVA_LANG_CHARACTER                = 1003;
    JAVA_LANG_DOUBLE                   = 1004;
    JAVA_LANG_FLOAT                    = 1005;
    JAVA_LANG_INTEGER                  = 1006;
    JAVA_LANG_LONG                     = 1007;
    JAVA_LANG_SHORT                    = 1008;
    JAVA_LANG_STRING                   = 1009;
    JAVA_UTIL_HASHTABLE                = 1010;
    JAVA_UTIL_VECTOR                   = 1011;
    
    TEST                               = 10001;
    NUMBER                             = 10002;
    TEST_OBJECT                        = 10003;
}

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Objects required for Collections and variable size objects
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

message Prefix {
    required ObjectType objectType = 2;
}

message Suffix {
    required int32 endOfObject = 1; // @map byte
}

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Test Objects
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

message Test {
	required int32 id                = 1201;
}

// Number was originally defined as a public static class inside TestObject.

message Number {
	required string number           = 1202;
	required int32  type             = 1203;
}

// TestObject extends Test. In order to simplify Java OO extension, we just copy the fields from
// the Test object to TestObject. 
// repeated required Number numbers becomes a Vector.
// repeated required bytes object is how we represent java.lang.Object i.e. a placeholder for any object.
// repeated required string legs is a String[]

message TestObject {
	required int32 id                = 1204; 
	required string  name            = 1205;
	required int32   age             = 1206;
	repeated required Number numbers = 1207;  
	repeated required bytes body     = 1208; // @map Object
	repeated required string legs    = 1209; 
}
