<?xml version="1.0" encoding="UTF-8"?>

<project name="${description}" default="build" basedir=".\build">

	<taskdef resource="bb-ant-defs.xml" classpath="lib/bb-ant-tools.jar" />

	<!-- Project properties -->
	<property name="project.title" value="BlackBerryME" />
	<property name="project.version" value="1.0.0" />
	<property name="build.directory" value="${basedir}" />
	<property name="release.directory" value="${basedir}" />
	<property name="dist.directory" value="${basedir}/../dist" />

	<!-- JDE properties -->
	<property name="simulator.directory" value="${jdehome}\simulator" />
	<property name="bin" value="${jdehome}\bin" />

	<!-- Source path -->
	<property name="workspace.directory" value="${basedir}/../.." />
	<property name="swingme.src" value="${workspace.directory}/SwingME/src" />
	<property name="utilme.src" value="${workspace.directory}/UtilME/src" />
	<property name="swingmetest.src" value="${workspace.directory}/SwingMETest/src" />
	<property name="test.src" value="${workspace.directory}/BlackBerryME/src" />
	<property name="bbme.src" value="${workspace.directory}/BlackBerryME/test" />
	

	<!-- Resources path -->
	<property name="res.src" value="${workspace.directory}/SwingMETest/resources/" />

	<target name="clean">

		<description>
				Delete all the previous built projects.
		</description>
<!--
		<delete includeEmptyDirs="false" failonerror="no">
			<fileset dir="${build.directory}" />
			<fileset dir="${release.directory}" />
			<fileset dir="${dist.directory}" />
		</delete>
-->
		<delete file="${jde.home}/simulator/${project.title}.cod" failonerror="no" />
	</target>

	<target name="clean-simulator">
		<description>
	    		1. Run the simulator's clean file.
	    		2. Delete the application from the simulator
	    </description>

		<exec executable="${jdehome}\simulator\clean.bat" dir="${jdehome}\simulator" />
		<exec executable="${jdehome}\simulator\fledge.exe" dir="${basedir}\simulator-data">
			<arg value="/app=${jdehome}\simulator\Jvm.dll" />
			<arg value="/clear-flash" />
			<arg value="/shutdown-after-startup" />
		</exec>
	</target>

	<target name="setup" depends="clean">
		<description>
	    		Create a build directory to hold exactly the source
	    		and resource files for the selected device model.	    		
	    		Then copy all the necesary files.
	    </description>

		<!-- -->
		<echo>Base directory: ${basedir} </echo>
		<echo>Build dir: ${build.directory} </echo>
		<echo>Workspace dir: ${workspace.directory} </echo>
		<echo>Release dir: ${release.directory} </echo>
		<echo>Dist dir: ${dist.directory} </echo>
		<echo>Simulator dir: ${simulator.directory} </echo>
		

		<mkdir dir="${build.directory}" />
		<mkdir dir="${release.directory}" />
		<mkdir dir="${dist.directory}" />

		<copy todir="${build.directory}">
			<fileset dir="${swingme.src}" includes="**" />
			<fileset dir="${swingmetest.src}" includes="**" />
			<fileset dir="${utilme.src}" includes="**" />
		</copy>

		<echo>replacing_imports</echo>

		<replaceregexp byline="true" match="javax.microedition.midlet.MIDlet(\W)" replace="net.yura.blackberry.midlet.MIDlet\1">
			<fileset dir="${build.directory}" includes="**/*.java" />
		</replaceregexp>

		<replaceregexp byline="true" flags="g" match="javax.microedition.m3g.Background(\W)" replace="net.yura.blackberry.midlet.m3g.Background\1">
			<fileset dir="${build.directory}" includes="**/*.java" />
		</replaceregexp>

		<replaceregexp byline="true" flags="g" match="javax.microedition.m3g.Graphics3D(\W)" replace="net.yura.blackberry.midlet.m3g.Graphics3D\1">
			<fileset dir="${build.directory}" includes="**/*.java" />
		</replaceregexp>

		<replaceregexp byline="true" flags="g" match="javax.microedition.m3g.Image2D(\W)" replace="net.yura.blackberry.midlet.m3g.Image2D\1">
			<fileset dir="${build.directory}" includes="**/*.java" />
		</replaceregexp>

		<echo>copying_more_files</echo>

		<copy todir="${build.directory}">
			<fileset dir="${bbme.src}" includes="**/*.java" />
			<fileset dir="${test.src}" includes="**/*.java" />
		</copy>

		<copy todir="${build.directory}">
			<fileset dir="${res.src}" includes="**" />
		</copy>

	</target>

	<target name="build" depends="setup" description="Builds Project">
		<rapc jdehome="${jdehome}" destdir="${release.directory}" noconvert="true" generatesourcelist="true" verbose="false" output="${project.title}" quiet="true">
			<jdp type="midlet" midletclass="net.yura.mobile.test.MyMidlet" title="${project.title}" 
				vendor="Badoo Ltd." version="${project.version}" description="" arguments="" systemmodule="false" runonstartup="false" startuptier="7" ribbonposition="0">
			</jdp>
			<src>
				<fileset dir="${build.directory}" includes="**" />
				<fileset file="${workspace.directory}\UtilME\lib\xmlpull_1_1_3_1.jar" />
			</src>
		</rapc>
		<alx destdir="${dist.directory}" filename="${project.title}.alx">
			<application id="${project.title}" name="${project.title}" copyright="Copyright (c) 2011 Badoo Limited" version="${project.version}" vendor="Badoo Limited">
				<codset greaterthanequal="4.6.0">
					<fileset dir="${release.directory}" includes="*.cod" />
				</codset>
			</application>
		</alx>
	</target>
	
	<target name="debug" depends="deploy" description="Builds, Deploys Project and Launches Remote Debug Server">
		<exec executable="cmd.exe" dir="${bin}" spawn="true">
			<arg value="/c" />
			<arg value="jdwp.bat" />
		</exec>
	</target>

	<target name="simulate" depends="deploy" description="Builds, Deploys Project and Launches Simulator">
		<!--<exec executable="cmd.exe" dir="${simulator.directory}" spawn="true">
			<arg value="/c" />
			<arg value="9000.bat" />
		</exec>-->
		<echo>here the simulator should be launched, check if the correct files were copied to the simulator directory</echo>
	</target>

	<target name="deploy" depends="build" description="Builds and Deploys Project">
		<copy todir="${simulator.directory}" overwrite="true">
			<fileset dir="${release.directory}">
				<include name="*.cod" />
				<include name="*.debug" />
				<include name="*.csl" />
				<include name="*.cso" />
			</fileset>
		</copy>
	</target>

	<target name="deliver" depends="clean, build">
		<copy file="${build.directory}\${project.title}\${project.title}.cod" tofile="${jde.home}\simulator\${project.title}.cod" />
		<copy file="${build.directory}\${project.title}\${project.title}.cod" tofile="${basedir}\delivery\${project.title}.cod" />
		<delete dir="${build.directory}" />
	</target>

</project>

